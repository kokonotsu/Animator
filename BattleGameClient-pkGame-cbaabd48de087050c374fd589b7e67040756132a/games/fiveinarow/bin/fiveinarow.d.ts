declare class AIChessFive {
    ChessArr: Array<any>;
    TempThree: Array<any>;
    ArrSelf4: string[];
    ArrAI: string[];
    private type;
    private Init_X;
    private Init_Y;
    Decision_X: number;
    Decision_Y: number;
    AIWin: number;
    InitValueX: number;
    InitValueY: number;
    AllCanPot: Array<any>;
    constructor();
    onJudce(): void;
    private onJudceWinFour(isAI?);
    private onJudceWinDoubleFour(isAI?);
    private onJudceWinThree(isAI?);
    private onDecisionFour(str);
    private onDecisionThree(str);
    private onDecisionGradeThree(str);
    private onValueOfPot();
    private onStructureDoubleFour(num_Loction);
}
declare class ChessmanFive extends egret.DisplayObjectContainer {
    private img1;
    constructor(resId: number);
    init(): void;
}
declare class ChessmanShadow extends egret.DisplayObjectContainer {
    private img1;
    private img2;
    INIT_X: number;
    INIT_Y: number;
    constructor(resId: number);
    init(): void;
}
declare class GameFiveExpressView extends EuiComponent {
    gp_game: eui.Group;
    gp_red: eui.Group;
    gp_sum: eui.Group;
    gp_lose: eui.Group;
    gp_chess: eui.Group;
    gp_tipMessage: eui.Group;
    btn_return: eui.Button;
    btn_sum: eui.Button;
    btn_lose: eui.Button;
    btn_express1: eui.Button;
    btn_express2: eui.Button;
    btn_express3: eui.Button;
    btn_express4: eui.Button;
    btn_express5: eui.Button;
    btn_express6: eui.Button;
    btn_sumNo: eui.Button;
    btn_sumYes: eui.Button;
    btn_loseNo: eui.Button;
    btn_loseYes: eui.Button;
    img_head_1: eui.Image;
    img_head_2: eui.Image;
    img_sex1: eui.Image;
    img_sex2: eui.Image;
    img_Chesstype1: eui.Image;
    img_Chesstype2: eui.Image;
    img_aperture_1: eui.Image;
    img_aperture_2: eui.Image;
    bg_wait: eui.Image;
    img_red: eui.Image;
    lb_name1: eui.Label;
    lb_name2: eui.Label;
    lb_time: eui.Label;
    lb_tip: eui.Label;
    lb_untouch: eui.Label;
    numTimeRefuseSum: number;
    playerHead1: RoleHeadImage;
    playerHead2: RoleHeadImage;
    playerAvatarGroup1: eui.Group;
    playerAvatarGroup2: eui.Group;
    lb_lose: eui.Label;
    lb_loseDescribe: eui.Label;
    lb_sum: eui.Label;
    lb_sumDescribe: eui.Label;
    constructor();
    onCancelSum(): void;
    onCancelLose(): void;
}
declare class GameFiveinARowView extends State {
    private container;
    private GameContainer;
    private bg;
    private bg_chess;
    private img_Chess;
    static GAME_WIDTH: number;
    static GAME_HEIGHT: number;
    static LINE_DISTANCE: number;
    static volume_global: SoundEffects;
    num_beginX: number;
    num_beginY: number;
    num_YIN_X: number;
    num_YIM_Y: number;
    num_YIN_W: number;
    num_YIM_H: number;
    Obj_Pot: any;
    Obj_Chess: any;
    SELF_TYPE: number;
    ENENY_TYPE: number;
    private ShadowChess;
    private numSelfSuccess_1;
    private numSelfSuccess_2;
    private numSelfSuccess_3;
    private numSelfSuccess_4;
    private AIObj;
    private BaseComment;
    private isSelfRound;
    private isEffectLoction;
    private num_time;
    private num_sum;
    private str_whoRound;
    private isGameOver;
    private selfIsWin;
    private numChess;
    static AILEVEL: number;
    private chessboardArr;
    constructor();
    init(): void;
    pauseCallback: () => void;
    private onGameResult(data);
    private stop();
    private onDraw();
    private onbegin(e);
    private onMove(e);
    private onEnd(e);
    private onJudceEffect(num_x, num_y);
    private onJudceSuccess(num_x, num_y);
    gameOver(result: number): void;
    private onJudce(INIT_X, INIT_Y);
    onCollectPot(): void;
    show(): void;
    private onGameEvent(data);
    private onAddEnemy(data1, data2, data3);
    private onChessNumber();
    private goBackBtnHandler();
    private onSum();
    private onLose();
    private onAgreeSum();
    private onAgreeLose();
    private onRefuseSum();
    private onFiveSuccessCartoon(num_X, num_Y, type);
    private ArrMessage;
    private onTipsShow(type);
    private addQiPaoCartoon(data, type?);
    private AddAIexpress();
    onSendMessage(e: egret.TouchEvent): void;
    private isExpress;
    private onExpressBegin();
    private onExpressCancel();
    dispose(): void;
    private onStatusChange();
    private onTimerUpdate();
}
